spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer
#defaults
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.mms=1000
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$DoubleSerde

# Kafka Brokers hosts
spring.kafka.bootstrap-servers=localhost:9092
#billing out
spring.cloud.stream.bindings.clienttotal.destination=TOTAL_CUSTOMERS
spring.cloud.stream.bindings.clienttotal.producer.use-native-encoding=true
spring.cloud.stream.kafka.streams.bindings.clienttotal.producer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.clienttotal.producer.value-serde=org.apache.kafka.common.serialization.Serdes$DoubleSerde

#billing In
spring.cloud.stream.bindings.FACTURATION.destination=FACTURATION
spring.cloud.stream.bindings.FACTURATION.consumer.use-native-decoding=true
spring.cloud.stream.bindings.FACTURATION.group=FACTURATION-gr
spring.cloud.stream.kafka.streams.bindings.FACTURATION.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.bindings.FACTURATION.consumer.value-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.FACTURATION.consumer.application-id=analytics-app-id

server.port=8083


